"""empty message

Revision ID: 817dc8338815
Revises: 
Create Date: 2017-05-25 00:53:06.319517

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '817dc8338815'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('evaluation_sets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=250), nullable=True),
    sa.Column('prediction_result_file_path', sa.String(length=550), nullable=True),
    sa.Column('roc_graph_file_path', sa.String(length=550), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_evaluation_sets_name'), 'evaluation_sets', ['name'], unique=False)
    op.create_table('task_status_records',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.String(length=250), nullable=True),
    sa.Column('classifier_id', sa.String(length=250), nullable=True),
    sa.Column('update_time', sa.DateTime(), nullable=True),
    sa.Column('body', sa.String(length=5000), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=250), nullable=True),
    sa.Column('password', sa.String(length=250), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=False)
    op.create_table('classifiers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=250), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('labels', sa.String(length=250), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('training_image_list_file_path', sa.String(length=550), nullable=True),
    sa.Column('training_label_list_file_path', sa.String(length=550), nullable=True),
    sa.Column('training_label_name_file_path', sa.String(length=550), nullable=True),
    sa.Column('epoch', sa.Integer(), nullable=True),
    sa.Column('network_type', sa.String(length=250), nullable=True),
    sa.Column('model_name', sa.String(length=250), nullable=True),
    sa.Column('task_id', sa.String(length=250), nullable=True),
    sa.Column('task_type', sa.String(length=250), nullable=True),
    sa.Column('training_status', sa.Integer(), nullable=True),
    sa.Column('training_start_time', sa.BigInteger(), nullable=True),
    sa.Column('training_end_time', sa.BigInteger(), nullable=True),
    sa.Column('container_id', sa.String(length=250), nullable=True),
    sa.Column('image_id', sa.String(length=250), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['classifiers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('videos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('slug', sa.String(length=250), nullable=True),
    sa.Column('width', sa.Integer(), nullable=True),
    sa.Column('height', sa.Integer(), nullable=True),
    sa.Column('totalframes', sa.Integer(), nullable=True),
    sa.Column('location', sa.String(length=250), nullable=True),
    sa.Column('skip', sa.Integer(), nullable=False),
    sa.Column('perobjectbonus', sa.Float(), nullable=True),
    sa.Column('completionbonus', sa.Float(), nullable=True),
    sa.Column('trainwithid', sa.Integer(), nullable=True),
    sa.Column('isfortraining', sa.Boolean(), nullable=True),
    sa.Column('blowradius', sa.Integer(), nullable=True),
    sa.Column('homographylocation', sa.String(length=250), nullable=True),
    sa.Column('pointmode', sa.Boolean(), nullable=True),
    sa.Column('orig_file_path', sa.String(length=550), nullable=True),
    sa.Column('extract_path', sa.String(length=550), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['trainwithid'], [u'videos.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_videos_slug'), 'videos', ['slug'], unique=False)
    op.create_table('classifier_evaluation_association',
    sa.Column('evaluation_sets_id', sa.Integer(), nullable=True),
    sa.Column('classifiers_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['classifiers_id'], ['classifiers.id'], ),
    sa.ForeignKeyConstraint(['evaluation_sets_id'], ['evaluation_sets.id'], )
    )
    op.create_table('labels',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('text', sa.String(length=250), nullable=True),
    sa.Column('videoid', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['videoid'], [u'videos.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('segments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('videoid', sa.Integer(), nullable=True),
    sa.Column('start', sa.Integer(), nullable=True),
    sa.Column('stop', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['videoid'], [u'videos.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('video_classifier_association',
    sa.Column('videos_id', sa.Integer(), nullable=True),
    sa.Column('classifiers_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['classifiers_id'], ['classifiers.id'], ),
    sa.ForeignKeyConstraint(['videos_id'], ['videos.id'], )
    )
    op.create_table('video_evaluation_association',
    sa.Column('evaluation_sets_id', sa.Integer(), nullable=True),
    sa.Column('videos_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['evaluation_sets_id'], ['evaluation_sets.id'], ),
    sa.ForeignKeyConstraint(['videos_id'], ['videos.id'], )
    )
    op.create_table('attributes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('text', sa.String(length=250), nullable=True),
    sa.Column('labelid', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['labelid'], [u'labels.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('jobs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('segmentid', sa.Integer(), nullable=True),
    sa.Column('istraining', sa.Boolean(), nullable=True),
    sa.Column('hitid', sa.String(length=30), nullable=True),
    sa.Column('assignmentid', sa.String(length=30), nullable=True),
    sa.Column('ready', sa.Boolean(), nullable=True),
    sa.Column('published', sa.Boolean(), nullable=True),
    sa.Column('completed', sa.Boolean(), nullable=True),
    sa.Column('compensated', sa.Boolean(), nullable=True),
    sa.Column('accepted', sa.Boolean(), nullable=True),
    sa.Column('validated', sa.Boolean(), nullable=True),
    sa.Column('useful', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['segmentid'], [u'segments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_jobs_accepted'), 'jobs', ['accepted'], unique=False)
    op.create_index(op.f('ix_jobs_compensated'), 'jobs', ['compensated'], unique=False)
    op.create_index(op.f('ix_jobs_completed'), 'jobs', ['completed'], unique=False)
    op.create_index(op.f('ix_jobs_published'), 'jobs', ['published'], unique=False)
    op.create_index(op.f('ix_jobs_ready'), 'jobs', ['ready'], unique=False)
    op.create_index(op.f('ix_jobs_validated'), 'jobs', ['validated'], unique=False)
    op.create_table('paths',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('jobid', sa.Integer(), nullable=True),
    sa.Column('labelid', sa.Integer(), nullable=True),
    sa.Column('userid', sa.Integer(), nullable=True),
    sa.Column('done', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['jobid'], [u'jobs.id'], ),
    sa.ForeignKeyConstraint(['labelid'], [u'labels.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('attribute_annotations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pathid', sa.Integer(), nullable=True),
    sa.Column('attributeid', sa.Integer(), nullable=True),
    sa.Column('frame', sa.Integer(), nullable=True),
    sa.Column('value', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['attributeid'], [u'attributes.id'], ),
    sa.ForeignKeyConstraint(['pathid'], [u'paths.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('boxes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pathid', sa.Integer(), nullable=True),
    sa.Column('xtl', sa.Integer(), nullable=True),
    sa.Column('ytl', sa.Integer(), nullable=True),
    sa.Column('xbr', sa.Integer(), nullable=True),
    sa.Column('ybr', sa.Integer(), nullable=True),
    sa.Column('frame', sa.Integer(), nullable=True),
    sa.Column('occluded', sa.Boolean(), nullable=True),
    sa.Column('outside', sa.Boolean(), nullable=True),
    sa.Column('generated', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['pathid'], [u'paths.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('boxes2attributes',
    sa.Column('box_id', sa.Integer(), nullable=True),
    sa.Column('attribute_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['attribute_id'], ['attributes.id'], ),
    sa.ForeignKeyConstraint(['box_id'], ['boxes.id'], )
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('boxes2attributes')
    op.drop_table('boxes')
    op.drop_table('attribute_annotations')
    op.drop_table('paths')
    op.drop_index(op.f('ix_jobs_validated'), table_name='jobs')
    op.drop_index(op.f('ix_jobs_ready'), table_name='jobs')
    op.drop_index(op.f('ix_jobs_published'), table_name='jobs')
    op.drop_index(op.f('ix_jobs_completed'), table_name='jobs')
    op.drop_index(op.f('ix_jobs_compensated'), table_name='jobs')
    op.drop_index(op.f('ix_jobs_accepted'), table_name='jobs')
    op.drop_table('jobs')
    op.drop_table('attributes')
    op.drop_table('video_evaluation_association')
    op.drop_table('video_classifier_association')
    op.drop_table('segments')
    op.drop_table('labels')
    op.drop_table('classifier_evaluation_association')
    op.drop_index(op.f('ix_videos_slug'), table_name='videos')
    op.drop_table('videos')
    op.drop_table('classifiers')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_table('users')
    op.drop_table('task_status_records')
    op.drop_index(op.f('ix_evaluation_sets_name'), table_name='evaluation_sets')
    op.drop_table('evaluation_sets')
    # ### end Alembic commands ###
